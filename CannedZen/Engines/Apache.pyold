
from ..Base_Engine import PNP_Engine, Registered_Engine, Registered_Method
from ..Registration import registerEngine, registerCommand, registerClassToCommand
from ..Utils.Base_Utilities import *

class Apache(PNP_Engine, Registered_Engine):
    
    __enginename__ = "apache"
    __categories__ = ['server']
    __toolkit_usage__ = "Apache Web Server"
    __toolkit_status__ = "Stable"

    __version__ = "httpd-2.2.19" 
    __source_url__ = "http://archive.apache.org/dist/httpd/"


    # Public Interface Methods (You should Only be Using These)
    # Uninstall is also available, but we simply inherit the parents
    # implementation.
    def __init__(self, path = None):
        if(path is None): path = default_app_path(__file__, self.__class__.__name__)
        print path        
        self.app_path = path
        if(os.path.exists(path)): self.installed = True
        else: self.installed = False
    
    
    def start(self):
        if(not self.installed):
            if(not self.install()): return False
        return self.__apache_starter()
    
    class start_alt(Registered_Method):
        def __call__(self):
            return "hey man"
        def get_usage(self):
            return "Apache Start Usage: ..."
        
    @registerCommand
    def stop(self):
        """ Stops the Apache Server.
        Multiline
        help
        docs
        """
        if(not self.installed): return True
        return self.__apache_stopper()

    def restart(self):
        if(not self.installed):
            if(not self.install()): return False
        return self.__apache_restarter()

    def install(self, force = False):
        super(self.__class__, self).install(force)
        if(self.installed): return True        
        installed = self.__apache_installer()
        self.installed = installed
        return installed

    # Private Internal Methods (DO NOT USE THESE METHODS)
    # Use the Public calls since they handle checking existence
    # of files and all that jazz. These interact directly with
    # the shell scripts
    def __apache_installer(self):
        command('''curl -o "%s.tar.gz" "%s%s.tar.gz"''' % (self.__version__, self.__source_url, self.__version__))
        command('''tar -xzf "%s.tar.gz"''' % self.__version__)
        command('''(cd %s && chmod u+x configure && ./configure --prefix="%s" --enable-mods-shared="all" --enable-deflate --enable-proxy --enable-proxy-balancer --enable-proxy-http && make && make install)''' % (self.__version__, self.app_path))
        command('''rm -rf %s && rm %s.tar.gz''' % (self.__version__, self.__version__))
        return True

    def __apache_stopper(self):
        command('''sudo "%s/bin/apachectl" stop''' % self.app_path)
        return True

    def __apache_starter(self):
        command('''sudo "%s/bin/apachectl" start''' % self.app_path)
        return True

    def __apache_restarter(self):
        command('''sudo "%s/bin/apachectl" restart''' % self.app_path)
        return True